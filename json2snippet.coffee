#!/usr/bin/env coffee

fs = require "fs"
p = require "commander"

## 更新外部配置
p.version("0.1")
  .option('-i, --input [VALUE]', 'the structure json file generated by luadocx extract')
  .option('-v, --verbos', 'be verbos when true')
  .option('-s, --includeZeroParamFunction', "when this switch turned out, the output snippets will include functions with zero params. It's suggested to use $LUA_PATH rather then including 0-param functions in snippets")
  .option('-l, --language [type]', 'which target language [lua, moon] the snippet should be served to', "lua")
  .parse(process.argv)

unless p.input
  console.log "FATAL: missing input structure json file. use -i please."
  process.exit 1

try
  items = JSON.parse fs.readFileSync p.input
catch err
  console.log "FATAL: fail to parse structure json file. error:#{err}"
  process.exit 1


console.log "######### Quick-x Snippets : BEGIN ########################"
result = ""

for item in items

  moduleName = item.moduleName
  unless moduleName
    p.verbos && console.log "# SKIP: unknow module:#{JSON.stringify(item)}"
    continue

  functions = item.functions
  unless Array.isArray(functions) and functions.length > 0
    p.verbos && console.log "# SKIP: ignore empty module:#{item.moduleName}"
    continue

  for func in functions
    continue unless p.includeZeroParamFunction or func.params
    cursorStop = if func.params then func.params.split(',').map((p, i)-> "${#{i + 1}:#{p.trim()}}").join(", ") else ""
    result += """
snippet #{func.name}(#{(func.params || "").replace(/\,/g, '\\\,').replace(/\s/g, '') }) "quick-x(v2): #{func.description}"
\t#{func.name}(#{cursorStop})
\n
"""

console.log result

console.log "######### Quick-x Snippets : END ########################"







